services:

  hoppscotch:
    image: hoppscotch/hoppscotch:latest
    restart: unless-stopped
    ports:
      - "3201:3201" 
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  hoppscotch-migrate:
    image: hoppscotch/hoppscotch:latest
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    command: ["npx", "prisma", "migrate", "deploy"]

  db:
    image: postgres:15
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'",
        ]
      interval: 5s
      timeout: 5s
      retries: 10

  dbadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    ports:
      - 3202:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - ./dbadmin-var-lib-pgadmin:/var/lib/pgadmin
    configs:
     - source: servers.json
       target: /pgadmin4/servers.json

configs:
  servers.json:
    content: |
      {
        "Servers": {
            "1": {
                "Name": "db",
                "Group": "Servers", 
                "Port": 5432,
                "Username": "postgres",
                "Host": "db",
                "SSLMode": "disable",
                "MaintenanceDB": "postgres"
            }
        }
      }
  